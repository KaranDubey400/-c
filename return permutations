Problem statement
Given a string S, find and return all the possible permutations of the input string.

Note 1 : The order of permutations is not important. Note 2 : If original string contains duplicate characters, permutations will also be duplicates.
Detailed explanation ( Input/output format, Notes, Images )
Sample Input :
abc
Sample Output :
abc
acb
bac
bca
cab
cba

code-----

#include <string>
using namespace std;

int returnPermutations(string input, string output[]){


        if (input.length() == 0) {
          output[0] = "";
          return 1;
        }

        string smallOutput[10000];
        int smallSize = returnPermutations(input.substr(1), smallOutput);
        int k = 0;
        for (int i = 0; i < smallSize; i++) {
          for (int j = 0; j <= smallOutput[i].length(); j++) {
              //we take i with small output to talk about particular substring in a small output 
            output[k++] = smallOutput[i].substr(0, j) + input[0] + smallOutput[i].substr(j);
            
               //this loop for a particular substring among 
            //all the subsstring in the smalloutput
            //as the value of j changes ...the position where to insert the character changes...

                         
          }
        }

        return k;

}



// void permute(string input, int start, int end, string output[], int &index) {
//     if (start == end) {
//         output[index++] = input;
//     } else {
//         for (int i = start; i <= end; i++) {
//             swap(input[start], input[i]);
//             permute(input, start + 1, end, output, index);
//             swap(input[start], input[i]); // backtrack
//         }
//     }
// }

// int returnPermutations(string input, string output[]) {
//     int index = 0;
//     permute(input, 0, input.size() - 1, output, index);
//     return index;
// }
  




int main(){
    string input;
    cin >> input;
    string output[10000];
    int count = returnPermutations(input, output);
    for(int i = 0; i < count && i < 10000; i++){
        cout << output[i] << endl;
    }
    return 0;
}
